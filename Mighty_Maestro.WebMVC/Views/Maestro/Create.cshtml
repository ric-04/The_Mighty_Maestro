@model Mighty_Maestro.Models.Maestro.MaestroCreate

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div style="color:black;background-color:white;padding:20px;opacity:70%" class="form-horizontal">
    <h2 style="color:black;" class="text-center">Create Maestro</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MaestroName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaestroName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaestroName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VenueId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VenueId, new { htmlAttributes = new { @class = "form-control" } }) @*Made change to add hidden form for VenueId (Hidden For & Display For)*@
            @Html.ValidationMessageFor(model => model.VenueId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfessorId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProfessorId, new { htmlAttributes = new { @class = "form-control" } }) @*What is form-contol (Bootstrap) formatting? (BS /'s into 12 columns)*@
            @Html.ValidationMessageFor(model => model.ProfessorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}